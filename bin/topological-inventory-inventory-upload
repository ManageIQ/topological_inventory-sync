#!/usr/bin/env ruby

lib = File.expand_path("../lib", __dir__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

STDOUT.sync = true

require "bundler/setup"
require "topological_inventory/sync/inventory_upload/processor_worker"

def parse_args
  require 'optimist'
  opts = Optimist.options do
    opt :queue_host, "Hostname of the Platform's kafka queue", :type => :string,
        :default => ENV.fetch("QUEUE_HOST", "localhost")
    opt :queue_port, "Port of the Platform's kafka queue", :type => :int,
        :default => (ENV.fetch("QUEUE_PORT", 9092)).to_i, :required => false
  end

  opts
end

args = parse_args

require "sources-api-client"
SourcesApiClient.configure do |config|
  config.scheme = ENV["SOURCES_SCHEME"] || "http"
  config.host   = "#{ENV["SOURCES_HOST"]}:#{ENV["SOURCES_PORT"]}"
  config.logger = TopologicalInventory::Sync.logger
end

topological_inventory_sync = TopologicalInventory::Sync::InventoryUpload::ProcessorWorker.new(args[:queue_host], args[:queue_port])
topological_inventory_sync.run
