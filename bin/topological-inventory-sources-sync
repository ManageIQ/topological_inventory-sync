#!/usr/bin/env ruby

lib = File.expand_path("../lib", __dir__)
$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)

STDOUT.sync = true

require "bundler/setup"
require "topological_inventory/sync"

def parse_args
  require 'optimist'
  opts = Optimist.options do
    opt :queue_host, "Hostname of the Platform's kafka queue", :type => :string,
        :default => ENV["QUEUE_HOST"] || "localhost"
    opt :queue_port, "Port of the Platform's kafka queue", :type => :int,
        :default => (ENV["QUEUE_PORT"] || 9092).to_i, :required => false
  end

  opts
end

args = parse_args

require "topological_inventory/core/ar_helper"
TopologicalInventory::Core::ArHelper.database_yaml_path = Pathname.new(__dir__).join("../config/database.yml")
TopologicalInventory::Core::ArHelper.load_environment!

require "sources-api-client"
SourcesApiClient.configure do |config|
  config.scheme = ENV["SOURCES_SCHEME"] || "http"
  config.host   = "#{ENV["SOURCES_HOST"]}:#{ENV["SOURCES_PORT"]}"

  require "topological_inventory/core/logging"
  config.logger = TopologicalInventory::Core.logger
end

topological_inventory_sync = TopologicalInventory::Sync::SourcesSyncWorker.new(args[:queue_host], args[:queue_port])
topological_inventory_sync.run
